name: Dependabot & Deprecated Alerts to Webex

on:
  schedule:
    - cron: "0 */8 * * *"  # ÊØè 8 Â∞èÊó∂‰∏ÄÊ¨°ÔºàUTCÔºâ
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      # 1Ô∏è‚É£ Checkout ‰ªìÂ∫ì
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3Ô∏è‚É£ ÂÆâË£Ö‰æùËµñÔºà‰ªÖÁîüÊàê lock Êñá‰ª∂ÔºåÈÅøÂÖçÈ¢ùÂ§ñÂÆâË£ÖÔºâ
      - name: Install dependencies (lock only)
        run: npm install --package-lock-only

      # 4Ô∏è‚É£ Ê£ÄÊµã Deprecated NPM ÂåÖ
      - name: Detect deprecated NPM packages
        id: detect_deprecated
        run: |
          rm -f deprecated_items.json deprecated.json

          deps=$(jq -r '(.dependencies // {}) + (.devDependencies // {}) | keys[]' package.json 2>/dev/null || true)

          if [ -z "$deps" ]; then
            echo "[]">deprecated.json
            echo "0">deprecated_count.txt
            echo "No dependencies found in package.json"
            exit 0
          fi

          for pkg in $deps; do
            deprecated_msg=$(npm view "$pkg" deprecated 2>/dev/null || true)
            if [ -n "$deprecated_msg" ]; then
              version_used=$(jq -r --arg p "$pkg" '.dependencies[$p] // .devDependencies[$p] // ""' package.json)
              latest_version=$(npm view "$pkg" version 2>/dev/null || echo "unknown")
              homepage=$(npm view "$pkg" homepage 2>/dev/null || echo "https://www.npmjs.com/package/$pkg")

              jq -n \
                --arg name "$pkg" \
                --arg used "$version_used" \
                --arg latest "$latest_version" \
                --arg info "$deprecated_msg" \
                --arg url "$homepage" \
                '{name:$name, used:$used, latest:$latest, info:$info, url:$url}' >> deprecated_items.json
            fi
          done

          if [ -f deprecated_items.json ]; then
            jq -s '.' deprecated_items.json > deprecated.json
          else
            echo "[]">deprecated.json
          fi

          count=$(jq 'length' deprecated.json)
          echo "$count" > deprecated_count.txt
          echo "Deprecated packages found: $count"

      # 5Ô∏è‚É£ ÊãâÂèñ Dependabot Alerts
      - name: Fetch Dependabot Alerts
        id: dependabot
        env:
          DEPENDABOT_PAT: ${{ secrets.PAT_FOR_DEPENDABOT }}
        run: |
          ALERTS=$(curl -s -H "Authorization: token $DEPENDABOT_PAT" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/${{ github.repository }}/dependabot/alerts?state=open")

          IS_ARRAY=$(echo "$ALERTS" | jq 'if type=="array" then true else false end')
          if [ "$IS_ARRAY" != "true" ]; then
            echo "Dependabot API ËøîÂõûÂºÇÂ∏∏Ôºå‰ΩøÁî®Á©∫Êï∞ÁªÑÊõø‰ª£"
            echo "[]" > dependabot.json
          else
            echo "$ALERTS" > dependabot.json
          fi

          COUNT=$(jq 'length' dependabot.json)
          echo "$COUNT" > dependabot_count.txt
          echo "Dependabot alerts found: $COUNT"

      # 6Ô∏è‚É£ ÊûÑÂª∫Ê∂àÊÅØ
      - name: Build Webex message
        run: |
          DEPRECATED_COUNT=$(cat deprecated_count.txt)
          DEPENDABOT_COUNT=$(cat dependabot_count.txt)

          printf "%s\n" "üìã Security & Maintenance Report for \`${{ github.repository }}\`" > message.txt
          printf "\n" >> message.txt

          # Dependabot ÈÉ®ÂàÜ
          if [ "$DEPENDABOT_COUNT" -gt 0 ]; then
            printf "%s\n" "üö® **Dependabot Alerts** ($DEPENDABOT_COUNT found)" >> message.txt
            jq -r '.[] | "- **\(.security_advisory.package.name)**: Severity: \(.security_advisory.severity)\n  Patched: \(.security_advisory.fixed_version // "N/A")\n üîó [View Alert](\(.html_url))"' dependabot.json >> message.txt
            printf "\n" >> message.txt
          else
            printf "%s\n\n" "‚úÖ No open Dependabot alerts." >> message.txt
          fi

          # Deprecated ÈÉ®ÂàÜ
          if [ "$DEPRECATED_COUNT" -gt 0 ]; then
            printf "%s\n" "‚ö†Ô∏è **Deprecated / Unmaintained NPM packages** ($DEPRECATED_COUNT found)" >> message.txt
            jq -r '.[] | "- **\(.name)** (used: \(.used), latest: \(.latest))**\n Reason: \(.info)\n üîó [Homepage](\(.url))"' deprecated.json >> message.txt
          else
            printf "%s\n" "‚úÖ No deprecated packages found." >> message.txt
          fi

          echo "===== message.txt START ====="
          cat message.txt
          echo "===== message.txt END ====="

      # 7Ô∏è‚É£ JSON ËΩ¨‰πâ & ÂèëÈÄÅ Webex
      - name: Send Alerts to Webex
        run: |
          ESCAPED_MESSAGE=$(python3 -c "import json; print(json.dumps(open('message.txt').read()))")
          curl -s -X POST \
            -H "Authorization: Bearer ${{ secrets.WEBEX_BOT_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"roomId\": \"${{ secrets.WEBEX_ROOM_ID }}\", \"markdown\": $ESCAPED_MESSAGE}" \
            https://webexapis.com/v1/messages
          echo "Message sent to Webex successfully."
